#Programmet börjar med att fråga användaren om de vill ha en tutorial.
#Om användaren väljer "ja" får de en kort förklaring av spelet och dess funktioner.
#Om användaren väljer "nej" får de inte en tutorial
while True:#loopen gör att du kommer få tillbaka frågan fram till att du valt "ja" eller "nej"
    tutorial = input("Vill du ha en tutorial? (ja/nej): ").lower()
    if tutorial == "ja":
        print("""\nHej och välkommen till bussen!\nDetta är ett spel där du som användare är en busschafför.
Spelet går ut på att plocka upp och släppa av passagerare.
Det finns många funktioner som låter dig beräkna olika 
värden på passagerarna. Alternativen finns i menyn nedan.
Lycka till!""")

        break
    elif tutorial == "nej":
        print("\nOkej, du vill inte ha en tutorial.")
        break
    else:
        print("Du måste svara ja eller nej")

#Definierar en klass som representerar en passagerare på bussen.
#Varje passagerare har ett namn, ålder och kön.
#Andra funktionen printar ut namn, ålder och kön
class Person:
    def __init__(self, namn, ålder, kön):
        self.namn = namn
        self.ålder = ålder
        self.kön = kön

    def __str__(self):
        return f"{self.namn} är {self.kön} och {self.ålder} år gammal."

#Låter användaren mata in uppgifter om en ny passagerare
#och lägger till dem i passagerarlistan om bussen inte är full.
#Programmet komenterar på inmatningsfel.
def plockaUpp(passagerare, max_passagerare):
    while True:
        try:
            if len(passagerare) < max_passagerare:
                namn = input("Ange passagerarens namn: ")
                if not namn.isalpha():
                        print("Namnet får bara innehålla bokstäver. Försök igen.")
                        continue
                while True:  
                    ålder_str = input("Ange passagerarens ålder: ")
                    try:
                        ålder = int(ålder_str)
                        if 0 < ålder <= 100:
                            break
                        else:
                            print("Åldern får inte vara mer än 100 eller mindre än 1. Försök igen.")
                    except ValueError:
                        print("Felaktig inmatning. Försök igen med ett heltal.")

                while True:
                    kön = input("Ange passagerarens kön man eller kvinna: ")
                    kön = kön.lower()
                    if kön in ["man", "kvinna"]:
                        break
                    else:
                        print("Felaktig inmatning. Försök igen med man eller kvinna")

                passager = Person(namn, ålder, kön)
                passagerare.append(passager)
                print(f"{namn} har plockats upp på bussen.")
                break
            else:
                print("Bussen är full. Passageraren kan inte stiga på.")
                break
        except ValueError:
            print("Något gick fel. Försök igen.")

#Låter användaren välja en passagerare som ska stiga av bussen och tar bort den från listan.
# Låter användaren välja en passagerare som ska stiga av bussen och tar bort den från listan.
def gåAv(passagerare):
    if not passagerare:
        print("Inga passagerare på bussen.")
        return

    skrivUt(passagerare)  

    while True:
        namn = input("Ange passagerarens namn som stiger av bussen:")
        if namn.lower() == "vip":
            print("VIP-status aktiverad! Alla passagerare har stigit av bussen.\n")
            print("""                                    _.-=._-         _
                         _.-="   _-          | ||"""""""---._______     __..
             ___.==="..-.______-,,,,,,,,,,,,`-''----" """""       """""  __'
      __.--""     __        ,'                   o \           __        [__|
 __-""=======.--""  ""--.=================================.--""  ""--.=======:
]       [w] : /        \ : |========================|    : /        \ :  [w] :
V___________:|          |: |========================|    :|          |:   _-"
 V__________: \        / :_|=======================/_____: \        / :__-"
 -----------'  "-____-"  `-------------------------------'  "-____-"  
 """)
            passagerare.clear()  
            return
                
        for person in passagerare:
            if person.namn == namn:
                print(f"{namn} har stigit av bussen.")
                passagerare.remove(person)
                return
            
        print(f"{namn} finns inte på bussen.")
        print("Denna passageraren finns inte på bussen.... Försök igen")


#Listar alla passagerare på bussen.
def skrivUt(passagerare):
    print("Passagerare på bussen:")
    for person in passagerare:
        print(person)

#Räknar ut den sammanlaga åldern av alla i listan.
def sammanlagdÅlder(passagerare):
    total_ålder = sum(person.ålder for person in passagerare)
    print("Den sammanlagda åldern på passagerarna är:", total_ålder)

#Räknar ut medelåldern av alla i listan.
#Avrundar resultat till heltal.
def medelÅlder(passagerare):
        total_ålder = sum(person.ålder for person in passagerare)
        if len(passagerare) > 0:
            medel_ålder = total_ålder / len(passagerare)
        else:
            print("Det finns inte några passagerare på bussen")

        print("Medelåldern på passagerarna är:", round(medel_ålder))

#Skriver ut äldsta personen från listan.
def äldst(passagerare):
    äldsta_person = None
    max_ålder = -1
    for person in passagerare:
        if person.ålder > max_ålder:
            max_ålder = person.ålder
            äldsta_person = person
    if äldsta_person:
        print(f"Äldsta personen på bussen är: {äldsta_person.namn}, ålder: {äldsta_person.ålder}")
    else:
        print("Det finns inga passagerare på bussen.")

#Skriver ut äldsta mammen från listan.
def äldst_man(passagerare):
    äldsta_man = None
    max_ålder = -1
    for person in passagerare:
        if person.kön.lower() == "man" and person.ålder > max_ålder:
            max_ålder = person.ålder
            äldsta_man = person
    if äldsta_man:
        print(f"Äldsta mannen på bussen är: {äldsta_man.namn}, ålder: {äldsta_man.ålder}")
    else:
        print("Det finns ingen manlig passagerare på bussen.")

#Skriver ut yngsta kvinnan från listan.
def yngst_kvinna(passagerare):
    yngsta_kvinna = None
    min_ålder = float('inf')
    for person in passagerare:
        if person.kön.lower() == "kvinna" and person.ålder < min_ålder:
            min_ålder = person.ålder
            yngsta_kvinna = person
    if yngsta_kvinna:
        print(f"Yngsta kvinnan på bussen är: {yngsta_kvinna.namn}, ålder: {yngsta_kvinna.ålder}")
    else:
        print("Det finns ingen kvinnlig passagerare på bussen.")

#Användaren får tre altenativ(älsta passagerare, äldata man, yngsta kvinna).
#Vid val av funktion 1, 2 eller 3 startar en av de tre överliggande funktioner.
def åld_alternativ(passagerare):
    alternativ = input("Välj ett alternativ:\n1. Hitta äldsta personen\n2. Hitta äldsta mannen\n3. Hitta yngsta kvinnan\n")
    if alternativ == "1":
        äldst(passagerare)
    elif alternativ == "2":
        äldst_man(passagerare)
    elif alternativ == "3":
        yngst_kvinna(passagerare)
    else:
        print("Ogiltigt alternativ.")

#Sorterar endast listan efter namn eller ålder.
#(Funktionen skrivUt(passagerare)(3) listar passagerarna)
def busSort(passagerare):
    sortering = input("Vill du sortera efter namn eller ålder?: ")
    if sortering.lower() == "namn":
        passagerare.sort(key=lambda x: x.namn)
        print("Bussen har sorterats efter namn.")
    elif sortering.lower() == "ålder":
        passagerare.sort(key=lambda x: x.ålder)
        print("Bussen har sorterats efter ålder.")
    else:
        print("Ogiltigt val.")

#Användaren anger ett åldersspann som listan sorteras efter.
def hittaPassagerare(passagerare):
    while True:
        try:
            min_ålder = int(input("Ange lägsta åldern i spannet: "))
            max_ålder = int(input("Ange högsta åldern i spannet: "))
            break  
        except ValueError:
            print("Felaktig inmatning. Ange endast heltal.")

    passager_inom_spann = []
    for person in passagerare:
        if min_ålder <= person.ålder <= max_ålder:
            passager_inom_spann.append(person)
    if passager_inom_spann:
        print(f"Passagerare inom åldersspannet {min_ålder}-{max_ålder}:")
        for person in passager_inom_spann:
            print(person)
    else:
        print("Inga passagerare finns inom det angivna åldersspannet.")

#Användaren kan peta på passagerae, olika resultat beror på villket åldersspann passageraren befinner sig i.
#Om personen befinner sig i åldersspannet 70 till 100 så blir personen borttagen från bussen.
def peta(passagerare):
    skrivUt(passagerare)
    namn = input("Ange passagerarens namn som du vill peta på:")
    for person in passagerare:
        if person.namn == namn:
            ålder = person.ålder
            if ålder >= 1 and ålder <= 5:
                print(f"{person.namn} skriker när hen bli petad på.")
            elif ålder > 5 and ålder <= 10:
                print(f"Jag berättar för mamma, säger {person.namn} när hen bli petad på.")
            elif ålder > 10 and ålder <= 30:
                print(f"{person.namn} skrattar när hen bli petad på.")
            elif ålder > 30 and ålder <= 50:
                print(f"{person.namn} reagerar surt när hen bli petad på.")
            elif ålder > 50 and ålder <= 70:
                print(f"Lämna mig ifred, säger {person.namn} när hen bli petad på")
            elif ålder > 70 and ålder <= 100:
                print(f"R.I.P för {person.namn}---💀💀💀💀💀---\nDet blev ingen lång busstur för {person.namn} hen släpptes av vid sidan vägen")
                passagerare.remove(person)
                print()
                skrivUt(passagerare)
            return
    print(f"{namn} finns inte på bussen")

#Huvudpogrammet och menyn. Anger funktionerna en siffra.
def main():
    passagerare = []
    max_passagerare = 25
    while True:

        print("""
                      MENY alternativ
1. Plocka upp ny passagerare   6. Ålder passagerare(min/max)
2. Släpp av passagerare        7. Sortera passagerare
3. Lista passagerare           8. Lista passagerare inom valt åldersspann
4. Beräkna sammanlagd ålder    9. Peta på passagerare
5. Beräkna medelåldern         Q. Avsluta
        """)

        menyVal = input("-> ").upper()

        if menyVal == "1":
            plockaUpp(passagerare, max_passagerare)
        elif menyVal == "2":
            gåAv(passagerare)
        elif menyVal == "3":
            skrivUt(passagerare)
        elif menyVal == "4":
            sammanlagdÅlder(passagerare)
        elif menyVal == "5":
            medelÅlder(passagerare)
        elif menyVal == "6":
            åld_alternativ(passagerare)
        elif menyVal == "7":
            busSort(passagerare)
        elif menyVal == "8":
            hittaPassagerare(passagerare)
        elif menyVal == "9":
            peta(passagerare)
        elif menyVal == "Q":  
            break



if __name__ == "__main__":
    main()
